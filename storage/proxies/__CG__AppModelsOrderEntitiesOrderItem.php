<?php

namespace DoctrineProxies\__CG__\App\Models\Order\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OrderItem extends \App\Models\Order\Entities\OrderItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'order_id', 'item_id', 'parent_item_id', 'sku', 'name', 'product_type', 'quantity', 'price', 'item_total_amount', 'item_tax_amount', 'item_discount_amount', 'product_image_url', 'product_options', 'order', '_em', 'hidden'];
        }

        return ['__isInitialized__', 'id', 'order_id', 'item_id', 'parent_item_id', 'sku', 'name', 'product_type', 'quantity', 'price', 'item_total_amount', 'item_tax_amount', 'item_discount_amount', 'product_image_url', 'product_options', 'order', '_em', 'hidden'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OrderItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemId', []);

        return parent::getItemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemId($item_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemId', [$item_id]);

        return parent::setItemId($item_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentItemId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentItemId', []);

        return parent::getParentItemId();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentItemId($parent_item_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentItemId', [$parent_item_id]);

        return parent::setParentItemId($parent_item_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderNumber', []);

        return parent::getOrderNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderNumber($order_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderNumber', [$order_id]);

        return parent::setOrderNumber($order_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSku', []);

        return parent::getSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setSku($sku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSku', [$sku]);

        return parent::setSku($sku);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxAmount', []);

        return parent::getTaxAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxAmount($item_tax_amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxAmount', [$item_tax_amount]);

        return parent::setTaxAmount($item_tax_amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductType', []);

        return parent::getProductType();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductType($product_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductType', [$product_type]);

        return parent::setProductType($product_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemTotalAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemTotalAmount', []);

        return parent::getItemTotalAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemTotalAmount($item_total_amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemTotalAmount', [$item_total_amount]);

        return parent::setItemTotalAmount($item_total_amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemTaxAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemTaxAmount', []);

        return parent::getItemTaxAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemTaxAmount($item_tax_amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemTaxAmount', [$item_tax_amount]);

        return parent::setItemTaxAmount($item_tax_amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemDiscountAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemDiscountAmount', []);

        return parent::getItemDiscountAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemDiscountAmount($item_discount_amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemDiscountAmount', [$item_discount_amount]);

        return parent::setItemDiscountAmount($item_discount_amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductImageUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductImageUrl', []);

        return parent::getProductImageUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductImageUrl($product_image_url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductImageUrl', [$product_image_url]);

        return parent::setProductImageUrl($product_image_url);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductOptions', []);

        return parent::getProductOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductOptions(array $product_options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductOptions', [$product_options]);

        return parent::setProductOptions($product_options);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', []);

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function fillFromArray(array $attributes = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fillFromArray', [$attributes]);

        return parent::fillFromArray($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function toJson($options = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJson', [$options]);

        return parent::toJson($options);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function relationsToArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'relationsToArray', []);

        return parent::relationsToArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityManager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityManager', []);

        return parent::getEntityManager();
    }

    /**
     * {@inheritDoc}
     */
    public function fill(array $attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fill', [$attributes]);

        return parent::fill($attributes);
    }

}
