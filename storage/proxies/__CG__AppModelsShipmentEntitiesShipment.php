<?php

namespace DoctrineProxies\__CG__\App\Models\Shipment\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Shipment extends \App\Models\Shipment\Entities\Shipment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'order_id', 'ship_date', 'shipment_tracking', 'carrier_code', 'service_code', 'package_code', 'shipstation_synced', 'sync_try', 'hidden', 'order', '_em', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'id', 'order_id', 'ship_date', 'shipment_tracking', 'carrier_code', 'service_code', 'package_code', 'shipstation_synced', 'sync_try', 'hidden', 'order', '_em', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Shipment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getRepository()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRepository', []);

        return parent::getRepository();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderId', []);

        return parent::getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderId($order_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderId', [$order_id]);

        return parent::setOrderId($order_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getShipDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipDate', []);

        return parent::getShipDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setShipDate($ship_date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipDate', [$ship_date]);

        return parent::setShipDate($ship_date);
    }

    /**
     * {@inheritDoc}
     */
    public function getShipmentTracking()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipmentTracking', []);

        return parent::getShipmentTracking();
    }

    /**
     * {@inheritDoc}
     */
    public function setShipmentTracking($shipment_tracking)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipmentTracking', [$shipment_tracking]);

        return parent::setShipmentTracking($shipment_tracking);
    }

    /**
     * {@inheritDoc}
     */
    public function getCarrierCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCarrierCode', []);

        return parent::getCarrierCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCarrierCode($carrier_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCarrierCode', [$carrier_code]);

        return parent::setCarrierCode($carrier_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getServiceCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getServiceCode', []);

        return parent::getServiceCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setServiceCode($service_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setServiceCode', [$service_code]);

        return parent::setServiceCode($service_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackageCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackageCode', []);

        return parent::getPackageCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackageCode($package_code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackageCode', [$package_code]);

        return parent::setPackageCode($package_code);
    }

    /**
     * {@inheritDoc}
     */
    public function getShipStationSynced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShipStationSynced', []);

        return parent::getShipStationSynced();
    }

    /**
     * {@inheritDoc}
     */
    public function setShipStationSynced($shipstation_synced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShipStationSynced', [$shipstation_synced]);

        return parent::setShipStationSynced($shipstation_synced);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncTry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncTry', []);

        return parent::getSyncTry();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncTry($sync_try)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncTry', [$sync_try]);

        return parent::setSyncTry($sync_try);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', []);

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function fillFromArray(array $attributes = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fillFromArray', [$attributes]);

        return parent::fillFromArray($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function toJson($options = 0)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJson', [$options]);

        return parent::toJson($options);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function relationsToArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'relationsToArray', []);

        return parent::relationsToArray();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityManager()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityManager', []);

        return parent::getEntityManager();
    }

    /**
     * {@inheritDoc}
     */
    public function fill(array $attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'fill', [$attributes]);

        return parent::fill($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

}
